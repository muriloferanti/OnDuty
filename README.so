# OnDutyNow ‚Äì Sistema Distribu√≠do de Aloca√ß√£o de Plantonistas

Projeto baseado em Laravel + Kafka, com arquitetura orientada a eventos para simular aloca√ß√£o din√¢mica de plantonistas em cen√°rios m√©dicos.

## üß† Vis√£o Geral

Este sistema utiliza **Laravel** como API principal e um servi√ßo separado chamado **OnDutyBroker** para comunica√ß√£o com o **Kafka**, acessado via REST Proxy.

O objetivo √© usar t√≥picos Kafka para gerenciar eventos como:

- `demands.created`: quando um hospital solicita um plantonista
- `availability.responses`: quando plantonistas respondem a uma demanda
- `assignments.confirmed`: confirma√ß√£o de aloca√ß√£o de plantonista
- `assignments.timeout`: caso ningu√©m responda a tempo

---

## üöÄ Setup do Ambiente com Docker

### Pr√©-requisitos
- Docker Desktop
- PHP >= 8.1 (estamos usando 8.4)
- Composer
- Laravel (criado com `laravel new` ou `composer create-project`)

### Servi√ßos Docker

Crie o arquivo `docker-compose.yml` com:

```yaml
version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  rest-proxy:
    image: confluentinc/cp-kafka-rest:7.0.1
    container_name: rest-proxy
    depends_on:
      - kafka
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS: 30000

  kowl:
    image: quay.io/cloudhut/kowl:master
    container_name: kowl
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_BROKERS: PLAINTEXT://kafka:9092
